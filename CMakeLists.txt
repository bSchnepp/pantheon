CMAKE_MINIMUM_REQUIRED(VERSION 3.10 FATAL_ERROR)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

SET(CMAKE_INSTALL_MESSAGE NEVER)

PROJECT(pantheon CXX C ASM)

SET(PANTHEON_VERSION_MAJOR 0)
SET(PANTHEON_VERSION_MINOR 0)
SET(PANTHEON_VERSION_PATCH 1)

CONFIGURE_FILE(
	"${CMAKE_SOURCE_DIR}/kern.h.in"
	"${CMAKE_BINARY_DIR}/kern.h"
	@ONLY)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})


# Get definitions specific to this board, or the mock board for tests
IF (${ONLY_TESTS})
	# Include mock definitions for arch.hpp
	FIND_PACKAGE(Threads REQUIRED)
	FIND_PACKAGE(GTest CONFIG REQUIRED)
	
	INCLUDE_DIRECTORIES(board/mock)
	INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
	
	ADD_SUBDIRECTORY(board/mock)
	ADD_SUBDIRECTORY(tests)
ELSE()
	ADD_SUBDIRECTORY(${TARGET_SYSTEM_BOARD})
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/arch/${CMAKE_SYSTEM_PROCESSOR})
INCLUDE_DIRECTORIES(Common)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)

ADD_SUBDIRECTORY(arch)
ADD_SUBDIRECTORY(Common)
ADD_SUBDIRECTORY(Devices)

# Also go and add in some external dependencies...
INCLUDE_DIRECTORIES(externals/printf)
ADD_SUBDIRECTORY(externals)

ADD_EXECUTABLE(pantheon kern_main.cpp cpprt.cpp)

IF (NOT ${ONLY_TESTS})
	SET_TARGET_PROPERTIES(pantheon PROPERTIES LINK_DEPENDS ${LINKER_SCRIPT})
	TARGET_LINK_LIBRARIES(pantheon ArchLibProper)
ELSEIF(${ONLY_TESTS})
	TARGET_LINK_LIBRARIES(pantheon Tests)
ENDIF()

TARGET_LINK_LIBRARIES(pantheon ArchLib)
TARGET_LINK_LIBRARIES(pantheon Common)
TARGET_LINK_LIBRARIES(pantheon Devices)
TARGET_LINK_LIBRARIES(pantheon Board)
TARGET_LINK_LIBRARIES(pantheon Printf)

ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD
	COMMAND ${CMAKE_OBJCOPY} -O binary ${CMAKE_PROJECT_NAME} kernel.img)
